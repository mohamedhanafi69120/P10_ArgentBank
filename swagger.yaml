swagger: "2.0"
info:
  title: Bank Argent API Documentation
  description: Contains all available API endpoints in this codebase.
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  # Start of the /user/login route
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for user login
      parameters:
        - in: body
          name: body
          description: Information needed to log in
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Successfully logged in
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid fields
        "500":
          description: Internal server error
  # End of the /user/login route

  # Start of the /user/signup route
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for user signup
      parameters:
        - in: body
          name: body
          description: Information needed to sign up
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Successfully signed up
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid fields
        "500":
          description: Internal server error
  # End of the /user/signup route

  # Start of the /user/profile route
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Fetch user profile
      description: API to retrieve user profile information
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid fields
        "500":
          description: Internal server error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update user profile
      description: API to update user profile information
      parameters:
        - in: body
          name: body
          description: Information to update in the user profile
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid fields
        "500":
          description: Internal server error
  # End of the /user/profile route

  # Start of the /transaction/current-month route
  /transaction/current-month:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: View transactions for the current month
      description: API to view all transactions for the current month grouped by account
      parameters:
        - in: query
          name: userId
          required: true
          type: string
          description: User ID
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            $ref: "#/definitions/TransactionResponse"
        "400":
          description: Invalid user ID
        "404":
          description: Not found
        "500":
          description: Internal server error
  # End of the /transaction/current-month route

  # Start of the /transaction/details route
  /transaction/details:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: View transaction details
      description: API to view the details of a transaction for the current month
      parameters:
        - in: query
          name: transactionId
          required: true
          type: string
          description: Transaction ID
      produces:
        - application/json
      responses:
        "200":
          description: Transaction details retrieved successfully
          schema:
            $ref: "#/definitions/TransactionDetails"
        "400":
          description: Invalid transaction ID
        "404":
          description: Transaction not found
        "500":
          description: Internal server error
  # End of the /transaction/details route

  # Start of the /transaction/{transactionId}/note route
  /transaction/{transactionId}/note:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Update transaction note
      description: API to add or update a note for a transaction
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: Transaction ID to update
        - in: body
          name: body
          description: Note information to add or update
          required: true
          schema:
            $ref: "#/definitions/UpdateTransaction"
      produces:
        - application/json
      responses:
        "200":
          description: Note successfully updated
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid payload
        "404":
          description: Transaction not found
        "500":
          description: Internal server error
  # End of the /transaction/{transactionId}/note route

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

# Start of definitions
definitions:
  # Start of User definition
  User:
    type: object
    properties:
      email:
        type: string
        description: User's email
      password:
        type: string
        description: User's password
      firstName:
        type: string
        description: User's first name
      lastName:
        type: string
        description: User's last name
      userName:
        type: string
        description: User's public name
  # End of User definition

  # Start of Login definition
  Login:
    type: object
    properties:
      email:
        type: string
        description: User's email
      password:
        type: string
        description: User's password
  # End of Login definition

  # Start of ApiResponse definition
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
        format: int32
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  # End of ApiResponse definition

  # Start of LoginResponse definition
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  # End of LoginResponse definition

  # Start of UserProfile definition
  UserProfile:
    type: object
    properties:
      userName:
        type: string
        description: User's public name
  # End of UserProfile definition

  # Start of TransactionResponse definition
  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
        format: int32
      message:
        type: string
      account:
        type: array
        items:
          type: object
          properties:
            accountId:
              type: string
            accountName:
              type: string
            transactions:
              type: array
              items:
                type: object
                properties:
                  transactionId:
                    type: string
                  date:
                    type: string
                    format: date
                  amount:
                    type: number
                    format: float
                  description:
                    type: string
                  balance:
                    type: number
                    format: float
                    description: Balance after the transaction
  # End of TransactionResponse definition

  # Start of TransactionDetails definition
  TransactionDetails:
    type: object
    properties:
      status:
        type: integer
        format: int32
      message:
        type: string
      transaction:
        type: object
        properties:
          transactionId:
            type: string
          date:
            type: string
          amount:
            type: number
          description:
            type: string
          accountId:
            type: string
          accountName:
            type: string
          balance:
            type: number
            description: Balance after the transaction
          category:
            type: string
            description: Transaction category
          note:
            type: string
            description: Transaction note
  # End of TransactionDetails definition

  # Start of UpdateTransaction definition
  UpdateTransaction:
    type: object
    properties:
      note:
        type: string
        description: Transaction note
      category:
        type: string
        description: Transaction category
  # End of UpdateTransaction definition
# End of definitions
